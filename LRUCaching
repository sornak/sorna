import { createClient } from 'redis';

const redisClient = createClient();

redisClient.on('connect', () => {
  console.log('Connected to Redis');
});
redisClient.on('error', (err) => {
  console.error('Redis error:', err);
});

const setCache = async (key, value, ttlInSeconds) => {
  try {
    await redisClient.setEx(key, ttlInSeconds, JSON.stringify(value));
    console.log(`Key "${key}" cached with TTL of ${ttlInSeconds} seconds`);
  } catch (err) {
    console.error('Error setting cache:', err);
  }
};

const getCache = async (key) => {
  try {
    const cachedData = await redisClient.get(key);
    return cachedData ? JSON.parse(cachedData) : null;
  } catch (err) {
    console.error('Error getting cache:', err);
    return null;
  }
};

(async () => {
  await redisClient.connect();

  await setCache('user1', { name: 'Sam', age: 40 }, 300);

  const cachedUser = await getCache('user1');
  console.log('Cached User:', cachedUser);

  await redisClient.quit();
})();
